/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ArrayGame, ArrayGameInterface } from "../ArrayGame";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_bet",
        type: "uint256",
      },
    ],
    name: "addGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameData",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "bet",
            type: "uint256",
          },
        ],
        internalType: "struct ArrayGame.GameItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_newId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_newBet",
        type: "uint256",
      },
    ],
    name: "updateGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610c788061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063a2f77bcc14610051578063af4e99de14610082578063b2189168146100a0578063b3aa2fe1146100bc575b600080fd5b61006b60048036038101906100669190610453565b6100d8565b60405161007992919061051f565b60405180910390f35b61008a610202565b60405161009791906106a7565b60405180910390f35b6100ba60048036038101906100b591906107fe565b6102fd565b005b6100d660048036038101906100d1919061086d565b6103a3565b005b6060600080805490508310610122576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011990610915565b60405180910390fd5b6000838154811061013657610135610935565b5b90600052602060002090600202016000016000848154811061015b5761015a610935565b5b90600052602060002090600202016001015481805461017990610993565b80601f01602080910402602001604051908101604052809291908181526020018280546101a590610993565b80156101f25780601f106101c7576101008083540402835291602001916101f2565b820191906000526020600020905b8154815290600101906020018083116101d557829003601f168201915b5050505050915091509150915091565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156102f4578382906000526020600020906002020160405180604001604052908160008201805461025990610993565b80601f016020809104026020016040519081016040528092919081815260200182805461028590610993565b80156102d25780601f106102a7576101008083540402835291602001916102d2565b820191906000526020600020905b8154815290600101906020018083116102b557829003601f168201915b5050505050815260200160018201548152505081526020019060010190610226565b50505050905090565b6000805490508310610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610915565b60405180910390fd5b6040518060400160405280838152602001828152506000848154811061036d5761036c610935565b5b906000526020600020906002020160008201518160000190816103909190610b70565b5060208201518160010155905050505050565b6000604051806040016040528084815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816103f89190610b70565b506020820151816001015550505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6104308161041d565b811461043b57600080fd5b50565b60008135905061044d81610427565b92915050565b60006020828403121561046957610468610413565b5b60006104778482850161043e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104ba57808201518184015260208101905061049f565b60008484015250505050565b6000601f19601f8301169050919050565b60006104e282610480565b6104ec818561048b565b93506104fc81856020860161049c565b610505816104c6565b840191505092915050565b6105198161041d565b82525050565b6000604082019050818103600083015261053981856104d7565b90506105486020830184610510565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061059782610480565b6105a1818561057b565b93506105b181856020860161049c565b6105ba816104c6565b840191505092915050565b6105ce8161041d565b82525050565b600060408301600083015184820360008601526105f1828261058c565b915050602083015161060660208601826105c5565b508091505092915050565b600061061d83836105d4565b905092915050565b6000602082019050919050565b600061063d8261054f565b610647818561055a565b9350836020820285016106598561056b565b8060005b8581101561069557848403895281516106768582610611565b945061068183610625565b925060208a0199505060018101905061065d565b50829750879550505050505092915050565b600060208201905081810360008301526106c18184610632565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61070b826104c6565b810181811067ffffffffffffffff8211171561072a576107296106d3565b5b80604052505050565b600061073d610409565b90506107498282610702565b919050565b600067ffffffffffffffff821115610769576107686106d3565b5b610772826104c6565b9050602081019050919050565b82818337600083830152505050565b60006107a161079c8461074e565b610733565b9050828152602081018484840111156107bd576107bc6106ce565b5b6107c884828561077f565b509392505050565b600082601f8301126107e5576107e46106c9565b5b81356107f584826020860161078e565b91505092915050565b60008060006060848603121561081757610816610413565b5b60006108258682870161043e565b935050602084013567ffffffffffffffff81111561084657610845610418565b5b610852868287016107d0565b92505060406108638682870161043e565b9150509250925092565b6000806040838503121561088457610883610413565b5b600083013567ffffffffffffffff8111156108a2576108a1610418565b5b6108ae858286016107d0565b92505060206108bf8582860161043e565b9150509250929050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b60006108ff60138361048b565b915061090a826108c9565b602082019050919050565b6000602082019050818103600083015261092e816108f2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109ab57607f821691505b6020821081036109be576109bd610964565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826109e9565b610a3086836109e9565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610a6d610a68610a638461041d565b610a48565b61041d565b9050919050565b6000819050919050565b610a8783610a52565b610a9b610a9382610a74565b8484546109f6565b825550505050565b600090565b610ab0610aa3565b610abb818484610a7e565b505050565b5b81811015610adf57610ad4600082610aa8565b600181019050610ac1565b5050565b601f821115610b2457610af5816109c4565b610afe846109d9565b81016020851015610b0d578190505b610b21610b19856109d9565b830182610ac0565b50505b505050565b600082821c905092915050565b6000610b4760001984600802610b29565b1980831691505092915050565b6000610b608383610b36565b9150826002028217905092915050565b610b7982610480565b67ffffffffffffffff811115610b9257610b916106d3565b5b610b9c8254610993565b610ba7828285610ae3565b600060209050601f831160018114610bda5760008415610bc8578287015190505b610bd28582610b54565b865550610c3a565b601f198416610be8866109c4565b60005b82811015610c1057848901518255600182019150602085019450602081019050610beb565b86831015610c2d5784890151610c29601f891682610b36565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220300dae0f167e82a0ddd289231241ce246af2c3a87f03bcde0806faacf86dda4564736f6c634300081c0033";

type ArrayGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrayGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArrayGame__factory extends ContractFactory {
  constructor(...args: ArrayGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArrayGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArrayGame__factory {
    return super.connect(runner) as ArrayGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrayGameInterface {
    return new Interface(_abi) as ArrayGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ArrayGame {
    return new Contract(address, _abi, runner) as unknown as ArrayGame;
  }
}
