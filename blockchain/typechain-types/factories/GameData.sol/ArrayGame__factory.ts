/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ArrayGame,
  ArrayGameInterface,
} from "../../GameData.sol/ArrayGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_initialId",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "string",
            name: "wallet",
            type: "string",
          },
          {
            internalType: "string",
            name: "amount",
            type: "string",
          },
          {
            internalType: "bool",
            name: "ready",
            type: "bool",
          },
        ],
        internalType: "struct ArrayGame.Player[]",
        name: "_initialPlayers",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getGameData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ArrayGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrayGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArrayGame__factory extends ContractFactory {
  constructor(...args: ArrayGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialId: string,
    _initialPlayers: ArrayGame.PlayerStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _initialId,
      _initialPlayers,
      overrides || {}
    );
  }
  override deploy(
    _initialId: string,
    _initialPlayers: ArrayGame.PlayerStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _initialId,
      _initialPlayers,
      overrides || {}
    ) as Promise<
      ArrayGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArrayGame__factory {
    return super.connect(runner) as ArrayGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrayGameInterface {
    return new Interface(_abi) as ArrayGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ArrayGame {
    return new Contract(address, _abi, runner) as unknown as ArrayGame;
  }
}
